# install virtualenv
pip3 install virtualenv (For Mac)

#create virtualenv
virtualenv env
python -m venv env

#activate virtualenv
env\Scripts\activate (For window)
source env/bin/activate (For Mac/linux)

#install django
pip3 install django (for Mac)

# start project 
django-admin startproject project_name . (. is optional ans (.use garda file vitra ))

#create app
python3 manage.py startapp app_name

# To show package ,it used when package install example startproject is a package.
pip freeze > requirements.txt
pip install -r requirements.txt


# create gitignore file
.gitignore

# create .env file
    .env 

# dot-env install (serach on google python-dotenv)
pip install python-dotenv

# initialise git
git init

# add git
git add .

# git commit 
git commit -m "message"

# push into git
git push

# To check git branches
git branch

# Create new branch and immediately switches to it.
git checkout -b branch_name

# migration file
python3 manage.py makemigrations  [Note = makemigrations ley matra models lai herxa aru lai herdina like views.py,admin.py][migrations garnu vanda pahila app_name chahee project ko Installed APP vitra  app_name put garney]

# Implement changes to Database or To show on db.sqlite3
python3 manage.py migrate


# To show package ,it used when package install [.env is a package so it used again]
pip freeze > requirements.txt
pip install -r requirements.txt

# Install python dot-env 
pip install python-dotenv

# create superuser
python manage.py createsuperuser
   'username':superuser

# register models in admin
admin.site.register()

# Run django server
python3 manage.py runserver

# Create database in postgresql
CREATE DATABASE app_name;

# Connect postgresql to django OR Search in google connect postgresql to django
Search on google connect postgresql to django and copy [DATABASE]
    
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'app_name',
        'USER': 'postgres',
        'PASSWORD': 'your postgresql password',
        'HOST': 'localhost',
        'PORT': '5432'
    }

# psycopg2-binary package
pip install psycopg2-binary

# Migrate all models on postgresql
python3 manage.py migrate


# 
https://mockaroo.com/

# To save all dumpdata
python manage.py dumbdata app_name > create_file_name [Example python manage.py dumpdata blog_app > backup.json]

# To save project all data
python manage.py dumpdata > create_file_name [Example python manage.py dumpdata > back.json]

#........................................................................................................

#  Django Rest Framework

# Install Django Rest Framework.
pip3 install djangorestframework

# 
INSTALLED_APPS = [
    ...
    'rest_framework',
]
